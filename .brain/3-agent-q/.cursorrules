# Cursor rules for Agent Q

## Scenarios

### Implement Audio Playback
- **Scenario:** "Implement audio loading and synchronized playback for local files."
- **Skill-Jack:** `Read [".brain/3-agent-q/d-skill-jacks/web-audio-game-synchronization.skill-jack.ts"]`
- **Rules:** `core-audio.rules.mdc` (if exists, else `sound-and-music.rules.mdc`), `bpm-sync.rules.mdc`
- **Commands:** 
    - `cd packages/core-audio` (or relevant package)

### Develop Transcription Module
- **Scenario:** "Develop the offline kick/snare transcription module using [ChosenStrategy]."
- **Skill-Jack:** `Read [".brain/3-agent-q/d-skill-jacks/audio-transcription-strategies.skill-jack.ts"]`
- **Skill-Jack:** `Read [".brain/3-agent-q/d-skill-jacks/dsp-fundamentals.skill-jack.ts"]`
- **Skill-Jack:** `Read [".brain/3-agent-q/d-skill-jacks/python-node-integration.skill-jack.ts"]` (if using Python tools)
- **Skill-Jack:** `Read [".brain/3-agent-q/d-skill-jacks/ffmpeg-cli.skill-jack.ts"]` (if using FFmpeg)
- **Rules:** `typescript-standards.rules.mdc`
- **Commands:** 
    - (May involve setting up Python environment, installing libs like demucs/madmom)
    - `cd packages/transcription` (assuming a dedicated package)

### Investigate Advanced Transcription
- **Scenario:** "Research and prototype using [ModelName] for transcription."
- **Skill-Jack:** `Read [".brain/3-agent-q/d-skill-jacks/audio-transcription-strategies.skill-jack.ts"]`
- **Skill-Jack:** `Read [".brain/3-agent-q/d-skill-jacks/[ModelName]-api.skill-jack.ts"]` (To be created)
- **Commands:** 
    - (Likely involves running Python scripts, reading research papers/docs)

### Explore Streaming Service API
- **Scenario:** "Investigate the [Spotify/YouTube] API for playback control and metadata."
- **Skill-Jack:** `Read [".brain/3-agent-q/d-skill-jacks/streaming-api-usage.skill-jack.ts"]` (To be created)
- **Commands:**
    - (Web searches, potentially installing SDKs e.g., `pnpm add spotify-web-api-js --filter @kit/integration-spotify`)

### Test Audio Synchronization
- **Scenario:** "Write tests to verify audio playback timing against game events."
- **Skill-Jack:** `Read [".brain/3-agent-q/d-skill-jacks/web-audio-game-synchronization.skill-jack.ts"]`
- **Skill-Jack:** `Read [".brain/2-agent-spock/d-skill-jacks/tdd-vitest.skill-jack.ts"]`
- **Rules:** `functional-test-principles.rules`
- **Commands:**
    - `cd packages/core-audio` (or relevant package)
    - `pnpm test` 